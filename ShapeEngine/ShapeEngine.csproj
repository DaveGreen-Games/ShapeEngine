<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
	<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
	<RunWorkingDirectory>$(MSBuildThisFileDirectory)</RunWorkingDirectory>
	<ApplicationIcon>shape-engine.ico</ApplicationIcon>
	<Title>Shape Engine</Title>
	<Authors>Dave Green</Authors>
	<RepositoryUrl>https://github.com/DaveGreen-Games/ShapeEngine</RepositoryUrl>
	<Version>4.0.3</Version>
	<Description>My custom made 2d game engine based on the great Raylib Framework. Main focus is being performant and only using draw functions instead of textures. Custom input, audio, savegame, collision, shape, pathfinding, ui, camera, color palette, polygon fracturing, and text system are available with a few other nice things!</Description>
	<PackageProjectUrl>https://davegreengames.itch.io/shape-engine</PackageProjectUrl>
	<PackageIcon>shapeengine-nuget-icon-128px.png</PackageIcon>
	<RepositoryType>git</RepositoryType>
	<PackageTags>GameEngine Framework 2D raylib gamedev graphics shapes polygon rect line clipper2 polygonclipping</PackageTags>
	<Company>Dave Green Games</Company>
	<Product>Shape Engine</Product>
	<AssemblyVersion>4.0.3</AssemblyVersion>
	<FileVersion>4.0.3</FileVersion>
  	<PackageReadmeFile>readme-nuget.md</PackageReadmeFile>
  	<NeutralLanguage>en-US</NeutralLanguage>
  	<Copyright>Copyright (c) David Grueneis 2025</Copyright>
  	<PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
  	<PackageReleaseNotes>
		#4.0.3 Release
		- Automated Nuget Package Upload Workflow tested
		
		#4.0.2 Release
		- ShapePhysics CalculateDragFactor functions is now public.
		- ShapeVec added ClampLength(v, max) ClampLength(v, min, max) functions.
		- ShapeMath added IsSignEqual() (int and float) functions.
		
		#4.0.1 Release
		- Added missing XML documentation file to the nuget package.
		
		#4.0.0 Release
		
		This release took 4 months to complete. 
		Originally, I just wanted to add the new Ray and Line shapes for drawing and collision detection, but it ended up being much more. 
		I took a look at physics, added some new functions, and cleaned up the PhysicsObject class. DrawCheckered was renamed to DrawStriped, and I added a lot of new variations as well. 
		There were many small changes, bug fixes, and improvements all over ShapeEngine. There are still things I wanted to add, but I decided to release 4.0 right now.
		
		Changelog:
		- Line and Ray shapes added. Both are defined by a Point and a Direction.
		- The Line is infinitely long in both directions from the point, and a Ray is infinitely long in one direction from the point.
		- Intersect / Overlap / ClosestPoint functions added to Line and Ray.
		- Intersect / Overlap / ClosestPoint functions overhauled and cleaned up for all remaining shapes (Segments, Points, Triangulation and Collider as well) to make everything consistent.
		- Line and Ray added to Cast/Query Space functions in CollisionHandler.
		- ShapesExample improved. Automated Testing and Projection added.
		- ShapesExample renamed to ShapeIntersectionExample
		- ShapeProjectionExample removed.
		- DrawCheckered renamed to DrawStriped
		- DrawStriped implemented for all closed shapes (Circle, Triangle, Rect, Quad, Polygon)
		- DrawStriped code improved with new line intersection functions
		- DrawStriped function with an outside and an inside shape. The striped lines will fill the outside shape and not the inside shape.
		- DrawShapeOutline example added
		- DrawShapeStriped example added
		- Physics! Example added
		- CurveDataExample added
		- Curve generic class implemented. Allows adding key-value pairs. Each key is time between 0 - 1. Allow sampling for a value at a certain time point. The value will be an interpolation between the values at the key before and after the time point.
		- CurveFloat, CurveInt, CurveVector2, CurveColor are implemented
		- ContainsShape functions overhauled for all closed shapes (Circle, Triangle, Rect, Quad, Polygon)
		- Polygon ContainsShape functions now properly check if the shape is contained. Previously, it would only check if all points are contained within the polygon, but would not check if the edges intersect the polygon.
		- Circle and Polygon have special ContainsShape code that uses intersection tests as well (other shapes just check if all points from the other shape are inside)
		- Raylib Cs bindings updated to 7.0.1
		- Clipper2 updated to 1.5.3
		- Static functions from PhysicsObject moved to the new static ShapePhysics class
		- Friction, Drag, Elastic Collision, Attraction, and Repulsion functions added to the ShapePhysics class
		- DrawArrow functions added to the ShapeDrawing class
		- ShapeDrawing was split into multiple files for each shape type: ShapePointDrawing, ShapeSegmentDrawing, ShapeLineDrawing, ShapeRayDrawing, ShapeTriangleDrawing, ShapeCircleDrawing, ShapeRectDrawing, ShapeQuadDrawing, ShapePolygonDrawing, ShapePolylineDrawing, ShapeDrawing, ShapeCustomDrawing, ShapeRingDrawing, ShapeGappedDrawing, ShapeStripedDrawing, ShapeUIDrawing
		- ShapeEngine.Lib namespace was renamed to ShapeEngine.StaticLib
		- Deferred Drawing System added to the Game class
		
	</PackageReleaseNotes>
  	<PackageId>DaveGreen.ShapeEngine</PackageId>
  	<LangVersion>latestmajor</LangVersion>
  </PropertyGroup>


	<ItemGroup>
		<None Include="readme-nuget.md" Pack="true" PackagePath="\"/>
	</ItemGroup>
	
  <ItemGroup>
    <Content Include="shape-engine.ico" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Clipper2" Version="1.5.3" />
    <PackageReference Include="Raylib-cs" Version="7.0.1" />
  </ItemGroup>

	<ItemGroup>
		<None Include="shapeengine-nuget-icon-128px.png" Pack="true" Visible="false" PackagePath="shapeengine-nuget-icon-128px.png" />
	</ItemGroup>

	<PropertyGroup>
		<PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
	  <DocumentationFile>bin\Release\net8.0\ShapeEngine.xml</DocumentationFile>
	</PropertyGroup>

	<ItemGroup>
		<None Include="LICENSE.txt" Pack="true" PackagePath=""/>
	</ItemGroup>

	<ItemGroup>
	  <Folder Include="Deprecated\" />
	</ItemGroup>

</Project>
